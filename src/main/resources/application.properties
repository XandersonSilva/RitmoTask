spring.application.name=ritmoTask
# Configuração da conexão com o banco MySQL
spring.datasource.url=${MYSQLURL}
spring.datasource.username=${MYSQLUSER}
spring.datasource.password=${MYSQLPASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Criação automática das tabelas ('update', 'create', 'create-drop' 'validate')
spring.jpa.hibernate.ddl-auto=update

# Configurações para mostrar SQL no console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Configurações para geração de tokens e autenticação
token.secret.key=${SECRET_KEY}

# Configurações para envio de emails
spring.mail.host=${MAILHOST:smtp.gmail.com}
spring.mail.port=${MAILPORT:587}
spring.mail.username=${MAILUSERNAME}
spring.mail.password=${MAILPASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Configurações para login com google
spring.security.oauth2.client.registration.google.client-id=${GOOGLECLIENTID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLECLIENTSECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile,https://www.googleapis.com/auth/calendar
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# Google API Credentials
google.api.project-id=${GOOGLEPROJECTID}
google.api.auth-uri=https://accounts.google.com/o/oauth2/auth
google.api.token-uri=https://oauth2.googleapis.com/token
google.api.auth-provider-x509-cert-url=https://www.googleapis.com/oauth2/v1/certs